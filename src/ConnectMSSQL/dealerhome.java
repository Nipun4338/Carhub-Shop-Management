/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ConnectMSSQL;

import java.awt.Color;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author Nipun
 */
public class dealerhome extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame1
     */
    String x1="";
    int id=0;
    public dealerhome() {
        initComponents();
        changeColor(entry, new Color(55,29,74));
        changeColor(jPanel8, new Color(247,78,105));
        clear();

    }
    public dealerhome(int Id) {
        initComponents();
        changeColor(entry, new Color(55,29,74));
        changeColor(jPanel8, new Color(247,78,105));
        id=Id;
        clear();

    }
    
    public void clear(){
        d.setVisible(false);
        f.setVisible(false);
        h.setVisible(false);
        j.setVisible(false);
        l.setVisible(false);
        n.setVisible(false);
        p.setVisible(false);
        r.setVisible(false);
        t.setVisible(false);
        v.setVisible(false);
        
        c.setVisible(false);
        e.setVisible(false);
        g.setVisible(false);
        i.setVisible(false);
        k.setVisible(false);
        m.setVisible(false);
        o.setVisible(false);
        q.setVisible(false);
        s.setVisible(false);
        u.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    boolean a=true,b=false;
    
    
    public void changeColor(JPanel hover, Color rand){
        hover.setBackground(rand);
    }
    
    public void clickMenu(JPanel h1, JPanel h2, int numberbool)
    {
        if(numberbool==1)
        {
            h1.setBackground(new Color(25,29,74));
            h2.setBackground(new Color(5,10,46));
        }
        else
        {
            h2.setBackground(new Color(25,29,74));
            h1.setBackground(new Color(5,10,46));
        }
    }
    
    public void hideshow(JPanel menuhide, boolean dashboard)
    {
        if(dashboard==true)
        {
            menuhide.setPreferredSize(new Dimension(50, menuhide.getHeight()));
        }
        else{
            menuhide.setPreferredSize(new Dimension(270, menuhide.getHeight()));
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JPanel();
        close = new javax.swing.JPanel();
        closebutton = new javax.swing.JPanel();
        close1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        menu = new javax.swing.JPanel();
        menuicon = new javax.swing.JPanel();
        menubutton = new javax.swing.JPanel();
        menu1 = new javax.swing.JLabel();
        settingsbutton = new javax.swing.JPanel();
        settings1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        menuhide = new javax.swing.JPanel();
        entry = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        show = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        dashboardveiw = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        c = new javax.swing.JLabel();
        d = new javax.swing.JTextField();
        e = new javax.swing.JLabel();
        f = new javax.swing.JTextField();
        g = new javax.swing.JLabel();
        i = new javax.swing.JLabel();
        k = new javax.swing.JLabel();
        m = new javax.swing.JLabel();
        o = new javax.swing.JLabel();
        q = new javax.swing.JLabel();
        s = new javax.swing.JLabel();
        u = new javax.swing.JLabel();
        h = new javax.swing.JTextField();
        j = new javax.swing.JTextField();
        l = new javax.swing.JTextField();
        n = new javax.swing.JTextField();
        p = new javax.swing.JTextField();
        r = new javax.swing.JTextField();
        t = new javax.swing.JTextField();
        v = new javax.swing.JTextField();
        insert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        header.setBackground(new java.awt.Color(5, 10, 46));
        header.setPreferredSize(new java.awt.Dimension(800, 50));
        header.setLayout(new java.awt.BorderLayout());

        close.setBackground(new java.awt.Color(5, 10, 46));
        close.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closebutton.setBackground(new java.awt.Color(5, 10, 46));
        closebutton.setName(""); // NOI18N
        closebutton.setLayout(new java.awt.BorderLayout());

        close1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        close1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_32px.png"))); // NOI18N
        close1.setName(""); // NOI18N
        close1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                close1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                close1MouseExited(evt);
            }
        });
        closebutton.add(close1, java.awt.BorderLayout.CENTER);

        close.add(closebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 0, 50, 50));

        header.add(close, java.awt.BorderLayout.LINE_END);

        jPanel1.setBackground(new java.awt.Color(5, 10, 52));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(5, 10, 52));

        jLabel1.setBackground(new java.awt.Color(5, 10, 52));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CarHub");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 220, 50));

        header.add(jPanel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        menu.setPreferredSize(new java.awt.Dimension(270, 450));
        menu.setLayout(new java.awt.BorderLayout());

        menuicon.setBackground(new java.awt.Color(5, 10, 52));
        menuicon.setPreferredSize(new java.awt.Dimension(50, 450));
        menuicon.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        menubutton.setBackground(new java.awt.Color(5, 10, 46));
        menubutton.setLayout(new java.awt.BorderLayout());

        menu1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/menu_32px.png"))); // NOI18N
        menu1.setMaximumSize(new java.awt.Dimension(50, 50));
        menu1.setMinimumSize(new java.awt.Dimension(50, 50));
        menu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menu1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                menu1MouseExited(evt);
            }
        });
        menubutton.add(menu1, java.awt.BorderLayout.PAGE_START);

        menuicon.add(menubutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 50, 40));

        settingsbutton.setBackground(new java.awt.Color(5, 10, 46));
        settingsbutton.setLayout(new java.awt.BorderLayout());

        settings1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        settings1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/settings_32px.png"))); // NOI18N
        settings1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settings1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settings1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settings1MouseExited(evt);
            }
        });
        settingsbutton.add(settings1, java.awt.BorderLayout.PAGE_START);

        menuicon.add(settingsbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 50, 40));

        jPanel5.setBackground(new java.awt.Color(5, 10, 46));
        jPanel5.setPreferredSize(new java.awt.Dimension(50, 5));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        menuicon.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 50, -1));

        jPanel6.setBackground(new java.awt.Color(5, 10, 46));
        jPanel6.setPreferredSize(new java.awt.Dimension(50, 5));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel6MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        menuicon.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, -1));

        menu.add(menuicon, java.awt.BorderLayout.LINE_START);

        menuhide.setBackground(new java.awt.Color(25, 29, 74));

        entry.setBackground(new java.awt.Color(5, 10, 46));
        entry.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                entryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                entryMouseExited(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(5, 10, 46));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Data Entry");

        javax.swing.GroupLayout entryLayout = new javax.swing.GroupLayout(entry);
        entry.setLayout(entryLayout);
        entryLayout.setHorizontalGroup(
            entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );
        entryLayout.setVerticalGroup(
            entryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(5, 10, 46));
        jPanel8.setPreferredSize(new java.awt.Dimension(50, 5));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel8MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        show.setBackground(new java.awt.Color(5, 10, 46));
        show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showMouseExited(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(5, 10, 46));
        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data Show");

        javax.swing.GroupLayout showLayout = new javax.swing.GroupLayout(show);
        show.setLayout(showLayout);
        showLayout.setHorizontalGroup(
            showLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        showLayout.setVerticalGroup(
            showLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(5, 10, 46));
        jPanel9.setPreferredSize(new java.awt.Dimension(50, 5));
        jPanel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel9MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel9MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout menuhideLayout = new javax.swing.GroupLayout(menuhide);
        menuhide.setLayout(menuhideLayout);
        menuhideLayout.setHorizontalGroup(
            menuhideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
            .addComponent(entry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
            .addComponent(show, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        menuhideLayout.setVerticalGroup(
            menuhideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuhideLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(entry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 349, Short.MAX_VALUE))
        );

        menu.add(menuhide, java.awt.BorderLayout.CENTER);

        getContentPane().add(menu, java.awt.BorderLayout.LINE_START);

        jComboBox1.setBackground(new java.awt.Color(51, 102, 255));
        jComboBox1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--NONE--", "Showroom", "Vehicle", "Accessories", "Services" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Data Entry:");

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        c.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        c.setForeground(new java.awt.Color(255, 255, 255));

        d.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        e.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        e.setForeground(new java.awt.Color(255, 255, 255));

        f.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fActionPerformed(evt);
            }
        });

        g.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        g.setForeground(new java.awt.Color(255, 255, 255));

        i.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        i.setForeground(new java.awt.Color(255, 255, 255));

        k.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        k.setForeground(new java.awt.Color(255, 255, 255));

        m.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        m.setForeground(new java.awt.Color(255, 255, 255));

        o.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        o.setForeground(new java.awt.Color(255, 255, 255));

        q.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        q.setForeground(new java.awt.Color(255, 255, 255));

        s.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        s.setForeground(new java.awt.Color(255, 255, 255));

        u.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        u.setForeground(new java.awt.Color(255, 255, 255));

        h.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        j.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        l.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        n.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        p.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        r.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        t.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        v.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(o, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(v, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(d, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(c, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(e, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(f, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(g, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(h, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(i, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(j, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(k, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(l, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(n, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(o, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(p, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(q, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(r, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(s, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(t, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(u, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(v, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );

        insert.setBackground(new java.awt.Color(0, 0, 153));
        insert.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        insert.setForeground(new java.awt.Color(255, 255, 255));
        insert.setText("Insert");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dashboardveiwLayout = new javax.swing.GroupLayout(dashboardveiw);
        dashboardveiw.setLayout(dashboardveiwLayout);
        dashboardveiwLayout.setHorizontalGroup(
            dashboardveiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardveiwLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(dashboardveiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, 0, 124, Short.MAX_VALUE)
                    .addComponent(insert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(82, 82, 82)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dashboardveiwLayout.setVerticalGroup(
            dashboardveiwLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardveiwLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(insert)
                .addGap(22, 22, 22))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(dashboardveiw, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(1049, 522));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void close1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseEntered
        // TODO add your handling code here:
        changeColor(closebutton, new Color(55,29,74));
    }//GEN-LAST:event_close1MouseEntered

    private void close1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseExited
        // TODO add your handling code here:
        changeColor(closebutton, new Color(5,10,46));
    }//GEN-LAST:event_close1MouseExited

    private void close1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_close1MouseClicked

    private void menu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu1MouseClicked
        // TODO add your handling code here:
        clickMenu(menubutton,settingsbutton,1 );
        if(a==true)
        {
            hideshow(menu,a);
            SwingUtilities.updateComponentTreeUI(this);
            a=false;
        }
        else
        {
            hideshow(menu,a);
            SwingUtilities.updateComponentTreeUI(this);
            a=true;
        }
    }//GEN-LAST:event_menu1MouseClicked

    private void menu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu1MouseEntered
        // TODO add your handling code here:
        
        changeColor(menubutton, new Color(55,29,74));
        changeColor(jPanel6, new Color(247,78,105));
    }//GEN-LAST:event_menu1MouseEntered

    private void menu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menu1MouseExited
        // TODO add your handling code here:
        changeColor(menubutton, new Color(5,10,46));
        changeColor(jPanel6, new Color(5,10,46));
        
    }//GEN-LAST:event_menu1MouseExited

    private void settings1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings1MouseEntered
        // TODO add your handling code here:
        changeColor(settingsbutton, new Color(55,29,74));
        changeColor(jPanel5, new Color(8,177,150));
    }//GEN-LAST:event_settings1MouseEntered

    private void settings1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings1MouseClicked
        // TODO add your handling code here:
        //clickMenu(settingsbutton,menubutton,1);
    }//GEN-LAST:event_settings1MouseClicked

    private void settings1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settings1MouseExited
        // TODO add your handling code here:
        changeColor(settingsbutton, new Color(5,10,46));
        changeColor(jPanel5, new Color(5,10,46));
    }//GEN-LAST:event_settings1MouseExited
    
    private void jPanel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel6MouseEntered

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        // TODO add your handling code here:


    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel6MouseExited

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5MouseExited

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        x1 = String.valueOf(jComboBox1.getSelectedItem());
        System.out.println(x1);
        if(x1=="Showroom")
        {
            c.setVisible(true);
            d.setVisible(true);
            d.setText("");
            e.setVisible(true);
            f.setVisible(true);
            f.setText("");
            g.setVisible(true);
            h.setVisible(true);
            h.setText("");
            i.setVisible(true);
            j.setVisible(true);
            j.setText("");
            k.setVisible(true);
            l.setVisible(true);
            l.setText("");
            c.setText("Showroom Name:");
            e.setText("Showroom Capacity:");
            g.setText("Image:");
            i.setText("Contact No:");
            k.setText("Address:");
            m.setVisible(false);
            o.setVisible(false);
            q.setVisible(false);
            s.setVisible(false);
            u.setVisible(false);
            n.setVisible(false);
            p.setVisible(false);
            r.setVisible(false);
            t.setVisible(false);
            v.setVisible(false);
        }
        else if(x1=="--NONE--")
        {
            clear();
        }
        else if(x1=="Vehicle")
        {
            c.setVisible(true);
            d.setVisible(true);
            d.setText("");
            e.setVisible(true);
            f.setVisible(true);
            f.setText("");
            g.setVisible(true);
            h.setVisible(true);
            h.setText("");
            i.setVisible(true);
            j.setVisible(true);
            j.setText("");
            k.setVisible(true);
            l.setVisible(true);
            l.setText("");
            m.setVisible(true);
            n.setVisible(true);
            n.setText("");
            o.setVisible(true);
            p.setVisible(true);
            p.setText("");
            q.setVisible(true);
            r.setVisible(true);
            r.setText("");
            s.setVisible(true);
            t.setVisible(true);
            t.setText("");
            u.setVisible(true);
            v.setVisible(true);
            v.setText("");
            c.setText("Vehicle Name:");
            e.setText("Vehicle Model:");
            g.setText("Vehicle Type:");
            i.setText("Vehicle Description:");
            k.setText("Vehicle Cost:");
            m.setText("Vehicle Quantity:");
            o.setText("Showroom Id:");
            q.setText("Build Date:");
            s.setText("Image Id:");
            u.setText("Emi Months:");
            
        }
        else if(x1=="Accessories")
        {
            c.setVisible(true);
            d.setVisible(true);
            d.setText("");
            e.setVisible(true);
            f.setVisible(true);
            f.setText("");
            g.setVisible(true);
            h.setVisible(true);
            h.setText("");
            i.setVisible(true);
            j.setVisible(true);
            j.setText("");
            k.setVisible(true);
            l.setVisible(true);
            l.setText("");
            m.setVisible(true);
            n.setVisible(true);
            n.setText("");
            o.setVisible(true);
            p.setVisible(true);
            p.setText("");
            q.setVisible(true);
            r.setVisible(true);
            r.setText("");
            c.setText("Accessories Name:");
            e.setText("Brand Name:");
            g.setText("Accessories Description:");
            i.setText("Accessories Cost:");
            k.setText("Accessories Quantity:");
            m.setText("Showroom Id:");
            o.setText("Build Date:");
            q.setText("Image Id:");
            s.setVisible(false);
            t.setVisible(false);
            u.setVisible(false);
            v.setVisible(false);
        }
        else if(x1=="Services")
        {
            c.setVisible(true);
            d.setVisible(true);
            d.setText("");
            e.setVisible(true);
            f.setVisible(true);
            f.setText("");
            g.setVisible(true);
            h.setVisible(true);
            h.setText("");
            i.setVisible(true);
            j.setVisible(true);
            j.setText("");
            k.setVisible(true);
            l.setVisible(true);
            l.setText("");
            c.setText("Service Type:");
            e.setText("Service Description:");
            g.setText("Service Cost");
            i.setText("Showroom Id:");
            k.setText("Service Available:");
            m.setVisible(false);
            o.setVisible(false);
            q.setVisible(false);
            s.setVisible(false);
            u.setVisible(false);
            n.setVisible(false);
            p.setVisible(false);
            r.setVisible(false);
            t.setVisible(false);
            v.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Confirm Inserting?","Warning",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            if(x1=="Showroom")
            {
                String name=d.getText().toString();
                int quantity=Integer.parseInt(f.getText());
                String image=h.getText().toString();
                String number=j.getText().toString();
                String address=l.getText().toString();
                String sql="insert into showroom(dealer_Id,showroom_Name,showroom_Capacity,imagepath,contactno,address) Values(?,?,?,?,?,?)";       
                try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=carhub;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                PreparedStatement pstmt = connection.prepareStatement(sql);
                        try {
                            pstmt.setInt(1,id);
                            pstmt.setString(2,name);
                            pstmt.setInt(3,quantity);
                            pstmt.setString(4,image);
                            pstmt.setString(5,number);
                            pstmt.setString(6,address);

                            if(name.length()>0 && quantity>0 && number.length()>0 && address.length()>0)
                            {
                                pstmt.execute();
                                JOptionPane.showMessageDialog(null,"Showroom Inserted!");
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Please fill all that necessary!");
                            }
                        }catch (Exception e) {
                                e.printStackTrace();
                    }

                }
                catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(x1=="Services")
            {

                String name=d.getText().toString();
                int cost=Integer.parseInt(h.getText());
                String desc=f.getText().toString();
                int s_Id=Integer.parseInt(j.getText());
                String available=l.getText().toString();
                String sql="insert into services(dealer_Id,service_Type,service_Desc,service_Cost,showroom_Id,available) Values(?,?,?,?,?,?)";       
                try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=carhub;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                PreparedStatement pstmt = connection.prepareStatement(sql);
                        try {
                            pstmt.setInt(1,id);
                            pstmt.setString(2,name);
                            pstmt.setString(3,desc);
                            pstmt.setInt(4,cost);
                            pstmt.setInt(5,s_Id);
                            pstmt.setString(6,available);

                            if(name.length()>0 && desc.length()>0 && cost>0 && s_Id>0 && available.length()>0)
                            {
                                pstmt.execute();
                                JOptionPane.showMessageDialog(null,"Service Inserted!");
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Please fill all that necessary!");
                            }
                        }catch (Exception e) {
                                e.printStackTrace();
                    }

                }
                catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(x1=="Accessories")
            {

                String name=d.getText().toString();
                String brand=f.getText().toString();
                String desc=h.getText().toString();
                int cost=Integer.parseInt(j.getText());
                int quantity=Integer.parseInt(l.getText());
                int s_Id=Integer.parseInt(n.getText());
                String build=p.getText().toString();
                int image=Integer.parseInt(r.getText());
                String sql="insert into accessories(dealer_Id,accessories_Name,brand_Name,accessories_Desc,accessories_Cost,accessories_Quantity,showroom_Id,builddate,imageid) Values(?,?,?,?,?,?,?,?,?)";       
                try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=carhub;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                PreparedStatement pstmt = connection.prepareStatement(sql);
                        try {
                            pstmt.setInt(1,id);
                            pstmt.setString(2,name);
                            pstmt.setString(3,brand);
                            pstmt.setString(4,desc);
                            pstmt.setInt(5,cost);
                            pstmt.setInt(6,quantity);
                            pstmt.setInt(7,s_Id);
                            pstmt.setString(8,build);
                            pstmt.setInt(9,image);

                            if(name.length()>0 && brand.length()>0 && desc.length()>0 && cost>0 && quantity>0 && s_Id>0 && build.length()>0 && image>=0)
                            {
                                pstmt.execute();
                                JOptionPane.showMessageDialog(null,"Accessories Inserted!");
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Please fill all that necessary!");
                            }
                        }catch (Exception e) {
                                e.printStackTrace();
                    }

                }
                catch (Exception e) {
                    e.printStackTrace();
                }
            }
            else if(x1=="Vehicle")
            {
                String name=d.getText().toString();
                String model=f.getText().toString();
                String type=h.getText().toString();
                String desc=j.getText().toString();
                int cost=Integer.parseInt(l.getText());
                int quantity=Integer.parseInt(n.getText());
                int s_Id=Integer.parseInt(p.getText());
                String build=r.getText().toString();
                int image=Integer.parseInt(s.getText());
                int emi=Integer.parseInt(u.getText());

                int has=0,limit=0;

                String sql="select * from showroom where showroom_Id=?";
                try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                Connection connection = DriverManager.getConnection(
                        "jdbc:sqlserver://localhost:1433;databaseName=carhub;selectMethod=cursor", "sa", "123456");
                Statement statement = connection.createStatement();
                PreparedStatement pstmt = connection.prepareStatement(sql);
                pstmt.setInt(1,s_Id);
                ResultSet resultSet = pstmt
                        .executeQuery();
                while (resultSet.next()){
                       has=resultSet.getInt("has_Vehicle");
                       limit=resultSet.getInt("showroom_Capacity");
                    }
                    if(has+limit==0)
                    {
                        JOptionPane.showMessageDialog(null,"Wrong Showroom!");
                    }
                    else if(has>=limit || has+quantity>=limit)
                    {
                        JOptionPane.showMessageDialog(null,"Showroom Capacity Full!");
                    }
                    else
                    {
                        sql="insert into vehicle(dealer_Id,vehicle_Name,vehicle_Model,vehicle_Type,vehicle_Desc,vehicle_Cost,vehicle_Quantity,showroom_Id,builddate,imageid,emi_available) Values(?,?,?,?,?,?,?,?,?,?,?)";       
                        try {
                        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                        statement = connection.createStatement();
                        pstmt = connection.prepareStatement(sql);
                                try {
                                    pstmt.setInt(1,id);
                                    pstmt.setString(2,name);
                                    pstmt.setString(3,model);
                                    pstmt.setString(4,type);
                                    pstmt.setString(5,desc);
                                    pstmt.setInt(6,cost);
                                    pstmt.setInt(7,quantity);
                                    pstmt.setInt(8,s_Id);
                                    pstmt.setString(9,build);
                                    pstmt.setInt(10,image);
                                    pstmt.setInt(11,emi);
                                    if(name.length()>0 && model.length()>0 && type.length()>0 && desc.length()>0 && cost>0 && quantity>0 && s_Id>0 && build.length()>0 && image>=0 && emi>=0)
                                    {
                                        //pstmt.execute();
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(null,"Please fill all that necessary!");
                                    }
                                }catch (Exception e) {
                                        e.printStackTrace();
                            }

                        }
                        catch (Exception e) {
                            e.printStackTrace();
                        }

                        sql="Update showroom set has_Vehicle=? where showroom_Id=?";
                        pstmt = connection.prepareStatement(sql);
                        try {
                            pstmt.setInt(1,has+quantity);
                            pstmt.setInt(2,s_Id);

                            //ResultSet resultSet = statement
                            //        .executeQuery(sql);
                            pstmt.execute();

                            } catch (Exception e) {
                                e.printStackTrace();
                        }
                    }
                    JOptionPane.showMessageDialog(null,"Vehicle Inserted!");

                }
                catch (Exception e) {
                    e.printStackTrace();
                }

            }
            
            d.setText("");
            f.setText("");
            h.setText("");
            j.setText("");
            l.setText("");
            n.setText("");
            p.setText("");
            r.setText("");
            t.setText("");
            v.setText("");
            
        }
    }//GEN-LAST:event_insertActionPerformed

    private void fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fActionPerformed

    private void entryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entryMouseClicked
        // TODO add your handling code here:
        changeColor(entry, new Color(55,29,74));
        changeColor(jPanel8, new Color(247,78,105));

        dealerhome home=new dealerhome(id);
        home.setVisible(true);
        dispose();
    }//GEN-LAST:event_entryMouseClicked

    private void entryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entryMouseEntered
        // TODO add your handling code here:
        changeColor(entry, new Color(55,29,74));
        changeColor(jPanel8, new Color(247,78,105));

    }//GEN-LAST:event_entryMouseEntered

    private void entryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entryMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_entryMouseExited

    private void jPanel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_jPanel8MouseEntered

    private void jPanel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel8MouseExited

    private void showMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMouseClicked
        // TODO add your handling code here:
        changeColor(show, new Color(55,29,74));
        changeColor(jPanel9, new Color(247,78,105));

        dealercheck show=new dealercheck(id);
        show.setVisible(true);
        dispose();
    }//GEN-LAST:event_showMouseClicked

    private void showMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMouseEntered
        // TODO add your handling code here:
        changeColor(show, new Color(55,29,74));
        changeColor(jPanel9, new Color(247,78,105));
    }//GEN-LAST:event_showMouseEntered

    private void showMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMouseExited
        // TODO add your handling code here:
        changeColor(show, new Color(5,10,46));
        changeColor(jPanel9, new Color(5,10,46));
    }//GEN-LAST:event_showMouseExited

    private void jPanel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel9MouseEntered

    private void jPanel9MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel9MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel9MouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dealerhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dealerhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dealerhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dealerhome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dealerhome().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel c;
    private javax.swing.JPanel close;
    private javax.swing.JLabel close1;
    private javax.swing.JPanel closebutton;
    private javax.swing.JTextField d;
    private javax.swing.JPanel dashboardveiw;
    private javax.swing.JLabel e;
    private javax.swing.JPanel entry;
    private javax.swing.JTextField f;
    private javax.swing.JLabel g;
    private javax.swing.JTextField h;
    private javax.swing.JPanel header;
    private javax.swing.JLabel i;
    private javax.swing.JButton insert;
    private javax.swing.JTextField j;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel k;
    private javax.swing.JTextField l;
    private javax.swing.JLabel m;
    private javax.swing.JPanel menu;
    private javax.swing.JLabel menu1;
    private javax.swing.JPanel menubutton;
    private javax.swing.JPanel menuhide;
    private javax.swing.JPanel menuicon;
    private javax.swing.JTextField n;
    private javax.swing.JLabel o;
    private javax.swing.JTextField p;
    private javax.swing.JLabel q;
    private javax.swing.JTextField r;
    private javax.swing.JLabel s;
    private javax.swing.JLabel settings1;
    private javax.swing.JPanel settingsbutton;
    private javax.swing.JPanel show;
    private javax.swing.JTextField t;
    private javax.swing.JLabel u;
    private javax.swing.JTextField v;
    // End of variables declaration//GEN-END:variables
}
